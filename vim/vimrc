" Add locations needed by some plugins to $PATH
let $PATH = $PATH . ':' . expand("~/.cabal/bin")

set nocompatible        " Use vim default settings
filetype off            " Required by Vundle

" Load Vundle
set rtp+=~/.vim/bundle/vundle
call vundle#begin()

" Let Vundle manage itself ; required
Plugin 'gmarik/vundle'

Plugin 'altercation/vim-colors-solarized'
Plugin 'eagletmt/ghcmod-vim'
Plugin 'eagletmt/neco-ghc'
Plugin 'fatih/vim-go'
Plugin 'mattn/emmet-vim'
Plugin 'marijnh/tern_for_vim'
Plugin 'pangloss/vim-javascript'
Plugin 'rust-lang/rust.vim'
Plugin 'scrooloose/syntastic'
Plugin 'Shougo/neomru.vim'
Plugin 'Shougo/unite.vim'
Plugin 'Shougo/vimproc.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()
filetype plugin indent on

" General
set history=300         " Number of line of history vim should remember
set autoread            " Automatically reread a file if it has changed
set showcmd             " Show command or size of selection in visual mode
set nobackup
set nowritebackup
set noswapfile


" Colors and fonts
syntax enable               " Enable syntax highlighting
set background=dark
colorscheme solarized


" Interface
set title               " Show title in the console title bar
set ruler               " Show the current position inside the file
set laststatus=2        " Always show the status bar

set mouse=a             " The mouse is usable in all modes
set scrolloff=10        " Keep 10 lines when scrolling

set expandtab           " Expand all tab characters to spaces
set tabstop=4           " A tab character is 4 spaces
set shiftwidth=4        " Shift is 4 spaces
set colorcolumn=80      " Display a vertical bar at that column

set showmatch           " Show matching brackets/parentheses

set incsearch           " Incremental search
set ignorecase          " Ignore case when searching
set smartcase           " Search becomes case sensitive only if capital letters are used

set noerrorbells        " No sound on errors
set visualbell t_vb=    " No flash on errors


" Spellchecking
set spelllang=en
set dictionary=/usr/share/dict/words


" Tags
set tags=./tags;


" Press space to clear search highlighting and any message already displayed
nnoremap <silent> <space> :silent noh<Bar>echo<CR>


" Set <Space> as an alternative leader key. This is used instead of directly
" setting the leader key to <Space> in order for 'showcmd' to display something
" else than a blank character when <Space> is pressed as the leader key.
map <space> <leader>

" jk in to leave insert mode
inoremap <esc> <nop>
inoremap jk <esc>

" Disable the arrow keys ; use normal mode movements instead!
noremap <left>  <nop>
noremap <right> <nop>
noremap <up>    <nop>
noremap <down>  <nop>

inoremap <left>  <nop>
inoremap <right> <nop>
inoremap <up>    <nop>
inoremap <down>  <nop>

" Airline
let g:airline_powerline_fonts = 1

" Fugitive
nnoremap <leader>ga :Gwrite<cr>
nnoremap <leader>gc :Gcommit -v -q<cr>
nnoremap <leader>gb :Gblame<cr>
nnoremap <leader>gd :Gdiff<cr>
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gbr :Git branch<space>
nnoremap <leader>gco :Git checkout<space>
nnoremap <leader>gpull :Gpull<cr>
nnoremap <leader>gpush :Gpush<cr>


" neco-ghc
" Show detailed information (type) about symbols
let g:necoghc_enable_detailed_browse = 1


" Surround
" Make / surround a text object with comment marks
let g:surround_{char2nr('/')} = "/* \r */"

" Syntastic options
let g:syntastic_go_checkers = ['govet', 'go']

" Ignore AngularJS attributes in html files
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]


" Unite.vim
" Unite uses ag instead of find, if available.
" Don't forget to install ag!
call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])

" Look for files
nnoremap <leader>p :Unite -start-insert file_rec/async<cr>

" Grep search
nnoremap <leader>/ :Unite grep:.<cr>


" YouCompleteMe
" Automatically close the preview window. Whether or not the preview is shown
" in the first place depends on vim's 'completeopt' option.
let g:ycm_autoclose_preview_window_after_insertion=1

" Triggers for autocompletion for languages not configured by default
let g:ycm_semantic_triggers = {'haskell' : ['.']}


if has("autocmd")
    autocmd FileType c,cpp,sh,pl setlocal autoindent
    autocmd FileType c,cpp,sh,pl setlocal smartindent
    autocmd FileType c,cpp,sh,pl setlocal cindent

    autocmd FileType css,less,sass,scss setlocal shiftwidth=2 tabstop=2

    autocmd FileType go nmap <Leader>i <Plug>(go-info)

    autocmd FileType haskell noremap <F1> :GhcModType<cr>
    autocmd FileType haskell noremap <F2> :GhcModTypeClear<cr>
    autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
    autocmd BufWritePost *.hs,*.lhs GhcModCheckAndLintAsync

    autocmd BufRead,BufNewFile *.md setlocal filetype=markdown

    autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
    autocmd FileType python setlocal completeopt=menuone,longest,preview

    autocmd FileType javascript setlocal shiftwidth=2 tabstop=2

    autocmd FileType html setlocal shiftwidth=2 tabstop=2

    " For all text files set 'textwidth' to 78 characters
    autocmd FileType text setlocal textwidth=78

    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid or when inside an event handler
    " (happens when dropping a file on gvim).
    " Also don't do it when the mark is in the first line, that is the default
    " position when opening a file.
    autocmd BufReadPost *
        \ if line("'\"") > 1 && line("'\"") <= line("$") |
        \   exe "normal! g`\"" |
        \ endif

endif
