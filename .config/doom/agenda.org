* Literate Configuration - How to use this file?
** Tangling and detangling
:PROPERTIES:
:header-args: :tangle yes
:END:

This is a small, dummy function to test if tangling works the way I expect it to
work.

#+BEGIN_SRC emacs-lisp
(defun +ccressent/my-little-function ()
  (interactive)
  (message "Hello there!"))
#+END_SRC

If a source block has the ~:comments link~ header, org-babel will include links
to the original block and it will then be possible to use ~org-babel-detangle~
on the generated file to propagate changes back to the original org file.

** Weaving

Weaving is the process of generating a human readable output from a literate
program. With org-mode files, this is achieved using org-export to export the
file to various formats.

* Global variables
:PROPERTIES:
:header-args: :tangle yes
:END:

With proper, custom agenda views and filtering, it should be fine to just
include all my org files in the agenda. This hasn't caused my any issues yet.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-files (directory-files-recursively org-directory "\.org$"))
#+END_SRC

Displaying the agenda window might alter the current window configuration. With
the ~org-agenda-restore-windows-after-quit~ variable set to ~t~, the window
state will be saved before displaying the agenda and then restored after the
agenda is exited.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-restore-windows-after-quit t)
#+END_SRC

In my head the week starts on Monday and I like to see the whole week ahead of
me.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-start-on-weekday 1
      org-agenda-span 'week)
#+END_SRC

** The agenda view

Whenever the agenda displays a single day or if the current day is part of what
is being displayed, I want to see a time grid detailing that day, spanning from
8am to 10pm.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-time-grid '((daily today remove-match)
                             (0800 1000 1200 1400 1600 1800 2000 2200)
                             "......"
                             "----------------"))
#+END_SRC

#+BEGIN_SRC emacs-lisp
(setq org-agenda-custom-commands
      '((" " "Agenda"
         ((agenda "" nil)
          (tags "REFILE"
                ((org-agenda-overriding-header "Nodes to refile")
                 (org-tags-match-list-sublevels t)))))))
#+END_SRC

Make the agenda more compact by removing empty lines between sections, week
number, ...

#+BEGIN_SRC elisp
(setq org-agenda-compact-blocks t)
#+END_SRC

If a task with a deadline has been scheduled, no need to display the deadline
approaching pre-warning in the agenda view; if I have it scheduled, I should
take care of it on that day.

#+BEGIN_SRC elisp
(setq org-agenda-skip-deadline-prewarning-if-scheduled 'pre-scheduled)
#+END_SRC
